import java.io.*;
import java.util.*;

public class Main {
        public static long[][] p;

        public static void main(String[] args) throws IOException {

                BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
                BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

                int n = Integer.parseInt(br.readLine());
                p = new long[n + 1][10];

                bw.write(String.valueOf(stairs(n)));
                bw.flush();
                bw.close();

        }

        public static long stairs(int n) {
                p[1][0] = 0;
                p[1][1] = 1;
                p[1][2] = 1;
                p[1][3] = 1;
                p[1][4] = 1;
                p[1][5] = 1;
                p[1][6] = 1;
                p[1][7] = 1;
                p[1][8] = 1;
                p[1][9] = 1;

                for (int i = 2; i < n + 1; i++) {
                        p[i][0] = p[i - 1][1] % 1000000000;
                        p[i][1] = p[i - 1][0] + p[i - 1][2] % 1000000000;
                        p[i][2] = p[i - 1][1] + p[i - 1][3] % 1000000000;
                        p[i][3] = p[i - 1][2] + p[i - 1][4] % 1000000000;
                        p[i][4] = p[i - 1][3] + p[i - 1][5] % 1000000000;
                        p[i][5] = p[i - 1][4] + p[i - 1][6] % 1000000000;
                        p[i][6] = p[i - 1][5] + p[i - 1][7] % 1000000000;
                        p[i][7] = p[i - 1][6] + p[i - 1][8] % 1000000000;
                        p[i][8] = p[i - 1][7] + p[i - 1][9] % 1000000000;
                        p[i][9] = p[i - 1][8] % 1000000000;
                }
                return (p[n][0] + p[n][1] + p[n][2] + p[n][3] + p[n][4] + p[n][5] + p[n][6] + p[n][7] + p[n][8]
                                + p[n][9]) % 1000000000;

        }
}
