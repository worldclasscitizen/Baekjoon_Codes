import java.util.*;
import java.io.*;

public class Main {
  static StringBuilder sb = new StringBuilder();
  public static int[][] sudoku = new int[9][9];
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st;

    // INPUT sudoku
    for(int i = 0; i < 9; i++) {
      st = new StringTokenizer(br.readLine());
      for(int j = 0; j < 9; j++) {
        sudoku[i][j] = Integer.parseInt(st.nextToken());
      }
    }

    dfs(0, 0);
    
	}

  static void dfs(int x, int y) {
    if(y == 9) {
      dfs(x + 1, 0);
      return;
    }

    // if it's the end of search, print & exit the program.
    if (x == 9) {
			for (int i = 0; i < 9; i++) {
				for (int j = 0; j < 9; j++) {
					System.out.print(sudoku[i][j] + " ");
				}
				System.out.println();
			}
 
			System.exit(0);
		}

    if(sudoku[x][y] == 0) {
      for(int i = 1; i <= 9; i++) {
        if(check(x, y, i)) {
          sudoku[x][y] = i;
          dfs(x, y + 1);
        }
      }
      sudoku[x][y] = 0;
      return;
    }

    dfs(x, y + 1);
  }  

  static boolean check(int x, int y, int value) {
    
    // CHECK same row
    for(int i = 0; i < 9; i++) {
      if(sudoku[x][i] == value) {
        return false;
      }
    }

    // CHECK same column
    for(int i = 0; i < 9; i++) {
      if(sudoku[i][y] == value) {
        return false;
      }
    }

    // CHECK 3 x 3 box
    int startX = (x / 3) * 3;
    int startY = (y / 3) * 3;

    for(int i = startX; i < startX + 3; i++) {
      for(int j = startY; j < startY + 3; j++) {
        if(sudoku[i][j] == value) {
          return false;
        }
      }
    }

    return true;
  }
}
