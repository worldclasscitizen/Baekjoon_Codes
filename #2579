import java.util.*;
import java.io.*;

public class Main {
    public static StringBuilder sb = new StringBuilder();
    static int[] dp;
    static int[] stairs;

    static int n;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());

        n = Integer.parseInt(st.nextToken());
        dp = new int[n + 1]; // 이전 계단과 현재 계단을 밟을 경우의 최대 점수를 저장할 배열
        stairs = new int[n + 1]; // 계단의 점수를 저장할 배열

        for (int i = 1; i <= n; i++) {
            stairs[i] = Integer.parseInt(br.readLine());
        }

        dp[1] = stairs[1]; // 첫 번째 계단까지의 최대 점수 = 첫 번째 계단의 값

        if (n >= 2) {
            dp[2] = stairs[1] + stairs[2]; // 두 번째 계단까지의 최대 점수도 미리 계산
        }

        for (int i = 3; i <= n; i++) {
            // 이전 계단을 밟는 경우와 이전 계단을 밟지 않는 경우 중 더 큰 값을 선택
            dp[i] = Math.max(dp[i - 2] + stairs[i], dp[i - 3] + stairs[i - 1] + stairs[i]);
        }

        System.out.println(dp[n]);
    }
}
