import java.util.*;
import java.io.*;

public class Main {
  static int[] r_dp;
  static int[] l_dp;
  static int[] arr;
  static int n;
  public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    
    StringTokenizer st = new StringTokenizer(br.readLine());
    n = Integer.parseInt(st.nextToken());

    arr = new int[n];
    r_dp = new int[n];
    l_dp = new int[n];

    st = new StringTokenizer(br.readLine());
    for(int i = 0; i < n; i++) {
      arr[i] = Integer.parseInt(st.nextToken());
    }

    dp();

    int answer = arr[0];
    for(int i = 1; i < n; i++) {
      if(arr[i] > answer) {
        answer = arr[i];
      }
    }

    System.out.println(answer);
    
  }

  static void dp() {
    r_dp[0] = 1;
    l_dp[n-1] = 1;

    for(int i = 1; i < n; i++) {
      r_dp[i] = 1;
      for(int j = 0; j < i; j++) {
        if(arr[j] < arr[i]) {
          r_dp[i] = Math.max(r_dp[j]+1, r_dp[i]);
        }
      }
    }

    for(int i = n-2; i >= 0; i--) {
      l_dp[i] = 1;
      for(int j = n-1; j > i; j--) {
        if(arr[j] < arr[i]) {
          l_dp[i] = Math.max(l_dp[j]+1, l_dp[i]);
        }
      }
    }

    for(int i = 0; i < n; i++) {
      arr[i] = r_dp[i] + l_dp[i] - 1;
    }
  }
}
